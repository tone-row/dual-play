@font-face {
  font-family: "Dual";
  src: url("../fonts/dual.300.woff2") format("woff2");
}

html {
  font-family: Dual;
  font-size: 10vw;
  text-transform: uppercase;
}

html,
body {
  height: 100%;
}

body {
  background-color: var(--backgroundColor);
}

* {
  margin: 0;
  padding: 0;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

:root {
  --left: calc(50% - (1% * var(--distance) / 2));
  --right: calc(50% + (1% * var(--distance) / 2));
}

.letter,
[class^="shift"] {
  display: inline-block;
}

.o1,
.o2,
.tne,
.rw {
  position: fixed;
  top: 50%;
}
.o1,
.o2 {
  transform: translate3d(-50%, -50%, 0);
  margin-top: 1.1vw;
  margin-left: 0.1vw;
}
.tne {
  transform: translate3d(-50%, -50%, 0);
}
.rw {
  transform: translate3d(-50%, -50%, 0);
}

.o1 {
  left: var(--left);
}

.o2,
.rw {
  left: var(--right);
}

.tne {
  left: var(--left);
}

.tne,
.o1 {
  color: var(--leftColor);
}

.rw,
.o2 {
  color: var(--rightColor);
}

.t,
.n,
.e,
.r,
.w {
  transform: rotate(45deg);
  transform-origin: 50% 50%;
}

.shift-t {
  transform: translateX(1.2vw);
}

.shift-n {
  transform: translateX(7.25vw);
}

.shift-e {
  transform: translateX(4.15vw);
}

.shift-r {
  transform: translateX(-1.7vw);
}

.shift-w {
  transform: translateX(2vw);
}

.spin {
  display: inline-block;
  animation: var(--animationName) calc(1s * var(--animationSpeed))
    var(--animationEasing) infinite;
}

.tne .spin {
  transform: rotate(calc(var(--tneSpin) * 1deg));
}

.rw .spin {
  transform: rotate(calc(var(--rwSpin) * 1deg));
  animation: var(--animationName) calc(1s * var(--animationSpeed))
    var(--animationEasing)
    calc(var(--rwAnimationDelay) * 1s * var(--animationSpeed)) infinite;
}

#button-wrapper {
  font-size: 16px;
  position: fixed;
  top: 0;
  left: 0;
  padding: 1em;
  line-height: auto;
  button {
    font-size: 1em;
    padding: 5px 15px 3px;
    line-height: auto;
  }
}

@keyframes its-a-record {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
